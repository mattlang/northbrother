package com.blackhammer.game {		import flash.events.NetStatusEvent;    import flash.net.SharedObject;    import flash.net.SharedObjectFlushStatus;    import flash.display.Sprite;	public class GGESharedObject extends Sprite{				 private var _ggeSo:SharedObject;		public function GGESharedObject(appName:String) {			_ggeSo = SharedObject.getLocal(appName);           output.appendText("SharedObject loaded...\n");           output.appendText("loaded value: " + daSo.data.ggeLevel + "\n\n");		}				public function SaveLevel(theLevel:int):void {           output.appendText("saving value...\n");            			_ggeSo.data.ggeLevel = theLevel;            var flushStatus:String = null;            try {                flushStatus = _ggeSo.flush(10000);            } catch (error:Error) {                output.appendText("Error...Could not write SharedObject to disk\n");            }            if (flushStatus != null) {                switch (flushStatus) {                    case SharedObjectFlushStatus.PENDING:                        output.appendText("Requesting permission to save object...\n");                        mySo.addEventListener(NetStatusEvent.NET_STATUS, onFlushStatus);                        break;                    case SharedObjectFlushStatus.FLUSHED:                        output.appendText("Value flushed to disk.\n");                        break;                }            }            output.appendText("\n");        }				public function GetLevel():int{			return _ggeSo.data[ggeLevel]					}	}	}