package com.blackhammer.util{		import flash.text.*;	import flash.display.*; 	//import flash.event.*;	import flash.display.Sprite;	import flash.events.Event;	import flash.display.Graphics;		public class PointsDisplay extends Sprite { 				private var _pointsField:TextField  = new TextField();		private var _maxFontSize:Number = 48;		private var _minFontSize:Number = 6;		private var _format:TextFormat = new TextFormat();		private var _fadeTime:Number = 24*1.5;		private var _fadeCount:Number = 0;		private var _maxAlpha:Number = 1.0;		private var _minAlpha:Number = 0;		//private var _maxPoints:Number		//private var _minPoints:Number = 0;		private var _myContainer:Object;				public function PointsDisplay(myContainer:Object,daX:Number, daY:Number, daPoints:Number):void{		//public function PointsDisplay():void{			_myContainer = myContainer;						_pointsField.width = 100;			_pointsField.x = daX - (_pointsField.width /2); 			_pointsField.y = daY;			_pointsField.multiline = _pointsField.wordWrap = false;			_pointsField.autoSize = TextFieldAutoSize.CENTER;			_pointsField.type = TextFieldType.DYNAMIC;			_pointsField.alpha = 0;			//_maxPoints = daPoints			//_minPoints = daPoints/2			_pointsField.text = String(daPoints)            _format.font = "Verdana";			_format.bold = true;            _format.color = 0x66FF33;            _format.size = _minFontSize;            _format.underline = false;            _pointsField.defaultTextFormat = _format;			addChild(_pointsField);			_pointsField.addEventListener(Event.ENTER_FRAME, onLoop, false, 0, true)			trace("points", daPoints)		}			public function DisplayPoints(daX:Number, daY:Number, daPoints:Number):void{						_pointsField.x = daX - (_pointsField.width /2); 			_pointsField.y = daY;			_pointsField.alpha = 0;			//_maxPoints = daPoints			//_minPoints = daPoints/2			_pointsField.text = String(daPoints)           // _format.font = "Verdana";			//_format.bold = true;            //_format.color = 0x444466;            //_format.size = _minFontSize;            //_format.underline = false;            //_pointsField.defaultTextFormat = _format;			addChild(_pointsField);			_pointsField.addEventListener(Event.ENTER_FRAME, onLoop, false, 0, true)			trace("points", daPoints)		}				private function onLoop(evt:Event):void{			//_pointsField.text = String( Math.round(((_fadeCount/_fadeTime) * (_maxPoints - _minPoints)) + _minPoints) );			var daPercentComplete:Number = _fadeCount/_fadeTime			_format.size = ( daPercentComplete* (_maxFontSize - _minFontSize)) + _minFontSize;			if (_fadeCount <= (_fadeTime /2)){				var daAlpha = (daPercentComplete * 2 *(_maxAlpha - _minAlpha)) + _minAlpha;			} else {				daPercentComplete = 1 - daPercentComplete				daAlpha = (daPercentComplete * 2 *(_maxAlpha - _minAlpha)) + _minAlpha;			}			_pointsField.setTextFormat(_format);			_pointsField.alpha = daAlpha			_fadeCount ++			if (_fadeCount == _fadeTime) {				Kill()			}		}			private function Kill():void{			_pointsField.removeEventListener(Event.ENTER_FRAME, onLoop)			removeChild(_pointsField)			_pointsField = null			_myContainer.removeChild(this);					}		}}